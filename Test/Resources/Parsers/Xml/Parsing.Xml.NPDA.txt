=============================================================
Non-deterministic PDA
=============================================================
Root Rule Start: XAttribute.RootStart
Root Rule End: XAttribute.RootEnd
Rule Start: XAttribute.Start
Rule End: XAttribute.4

Root Rule Start: XText.RootStart
Root Rule End: XText.RootEnd
Rule Start: XText.Start
Rule End: XText.2

Root Rule Start: XCData.RootStart
Root Rule End: XCData.RootEnd
Rule Start: XCData.Start
Rule End: XCData.2

Root Rule Start: XComment.RootStart
Root Rule End: XComment.RootEnd
Rule Start: XComment.Start
Rule End: XComment.2

Root Rule Start: XElement.RootStart
Root Rule End: XElement.RootEnd
Rule Start: XElement.Start
Rule End: XElement.6

Root Rule Start: XSubNode.RootStart
Root Rule End: XSubNode.RootEnd
Rule Start: XSubNode.Start
Rule End: XSubNode.1

Root Rule Start: XInstruction.RootStart
Root Rule End: XInstruction.RootEnd
Rule Start: XInstruction.Start
Rule End: XInstruction.5

Root Rule Start: XDocument.RootStart
Root Rule End: XDocument.RootEnd
Rule Start: XDocument.Start
Rule End: XDocument.3

@ $<XAttribute>
STATE XAttribute.RootStart
    TOKEN-BEGIN => XAttribute.Start

@ <XAttribute>
STATE XAttribute.Start
    [NAME] => XAttribute.1
        ASSIGN name

<XAttribute>: NAME : name@ "=" ATTVALUE : value as Attribute
STATE XAttribute.1
    [EQUAL "="] => XAttribute.2

<XAttribute>: NAME : name "="@ ATTVALUE : value as Attribute
STATE XAttribute.2
    [ATTVALUE] => XAttribute.3
        ASSIGN value

<XAttribute>: NAME : name "=" ATTVALUE : value as Attribute@
STATE XAttribute.3
    EPSILON => XAttribute.4
        CREATE Attribute

<XAttribute>: NAME : name "=" ATTVALUE : value as Attribute@
END STATE XAttribute.4
    TOKEN-FINISH => XAttribute.RootEnd

$<XAttribute> @
STATE XAttribute.RootEnd

--------------------------------
@ $<XText>
STATE XText.RootStart
    TOKEN-BEGIN => XText.Start

@ <XText>
STATE XText.Start
    [NAME] => XText.1
        ASSIGN content
    [EQUAL "="] => XText.1
        ASSIGN content
    [ATTVALUE] => XText.1
        ASSIGN content
    [TEXT] => XText.1
        ASSIGN content

<XText>: NAME : content | EQUAL : content | ATTVALUE : content | TEXT : content as Text@
STATE XText.1
    EPSILON => XText.2
        CREATE Text

<XText>: NAME : content | EQUAL : content | ATTVALUE : content | TEXT : content as Text@
END STATE XText.2
    TOKEN-FINISH => XText.RootEnd

$<XText> @
STATE XText.RootEnd

--------------------------------
@ $<XCData>
STATE XCData.RootStart
    TOKEN-BEGIN => XCData.Start

@ <XCData>
STATE XCData.Start
    [CDATA] => XCData.1
        ASSIGN content

<XCData>: CDATA : content as CData@
STATE XCData.1
    EPSILON => XCData.2
        CREATE CData

<XCData>: CDATA : content as CData@
END STATE XCData.2
    TOKEN-FINISH => XCData.RootEnd

$<XCData> @
STATE XCData.RootEnd

--------------------------------
@ $<XComment>
STATE XComment.RootStart
    TOKEN-BEGIN => XComment.Start

@ <XComment>
STATE XComment.Start
    [COMMENT] => XComment.1
        ASSIGN content

<XComment>: COMMENT : content as Comment@
STATE XComment.1
    EPSILON => XComment.2
        CREATE Comment

<XComment>: COMMENT : content as Comment@
END STATE XComment.2
    TOKEN-FINISH => XComment.RootEnd

$<XComment> @
STATE XComment.RootEnd

--------------------------------
@ $<XElement>
STATE XElement.RootStart
    TOKEN-BEGIN => XElement.Start

@ <XElement>
STATE XElement.Start
    [ELEMENT_OPEN "<"] => XElement.1

<XElement>: "<"@ NAME : name { XAttribute : attributes } ( "/>" | ">" { XSubNode : subNodes } "</" NAME : closingName ">" ) as Element
STATE XElement.1
    [NAME] => XElement.2
        ASSIGN name

<XElement>: "<" NAME : name@ { XAttribute : attributes } ( "/>" | ">" { XSubNode : subNodes } "</" NAME : closingName ">" ) as Element
<XElement>: "<" NAME : name @{ XAttribute : attributes } ( "/>" | ">" { XSubNode : subNodes } "</" NAME : closingName ">" ) as Element
STATE XElement.2
    [ELEMENT_CLOSE ">"] => XElement.4
    [SINGLE_ELEMENT_CLOSE "/>"] => XElement.3
    <XAttribute> => XElement.2
        ASSIGN attributes

<XElement>: "<" NAME : name { XAttribute : attributes } ( "/>" | ">"@ { XSubNode : subNodes } "</" NAME : closingName ">" ) as Element
<XElement>: "<" NAME : name { XAttribute : attributes } ( "/>" | ">" @{ XSubNode : subNodes } "</" NAME : closingName ">" ) as Element
STATE XElement.4
    [COMPLEX_ELEMENT_OPEN "</"] => XElement.7
    <XSubNode> => XElement.4
        ASSIGN subNodes

<XElement>: "<" NAME : name { XAttribute : attributes } ( "/>" | ">" { XSubNode : subNodes } "</" NAME : closingName ">" ) as Element@
STATE XElement.3
    EPSILON => XElement.6
        CREATE Element

<XElement>: "<" NAME : name { XAttribute : attributes } ( "/>" | ">" { XSubNode : subNodes } "</"@ NAME : closingName ">" ) as Element
STATE XElement.7
    [NAME] => XElement.9
        ASSIGN closingName

<XElement>: "<" NAME : name { XAttribute : attributes } ( "/>" | ">" { XSubNode : subNodes } "</" NAME : closingName ">" ) as Element@
END STATE XElement.6
    TOKEN-FINISH => XElement.RootEnd

<XElement>: "<" NAME : name { XAttribute : attributes } ( "/>" | ">" { XSubNode : subNodes } "</" NAME : closingName@ ">" ) as Element
STATE XElement.9
    [ELEMENT_CLOSE ">"] => XElement.3

$<XElement> @
STATE XElement.RootEnd

--------------------------------
@ $<XSubNode>
STATE XSubNode.RootStart
    TOKEN-BEGIN => XSubNode.Start

@ <XSubNode>
STATE XSubNode.Start
    <XText> => XSubNode.1
        USING 
    <XCData> => XSubNode.1
        USING 
    <XComment> => XSubNode.1
        USING 
    <XElement> => XSubNode.1
        USING 

<XSubNode>: !XText | !XCData | !XComment | !XElement@
END STATE XSubNode.1
    TOKEN-FINISH => XSubNode.RootEnd

$<XSubNode> @
STATE XSubNode.RootEnd

--------------------------------
@ $<XInstruction>
STATE XInstruction.RootStart
    TOKEN-BEGIN => XInstruction.Start

@ <XInstruction>
STATE XInstruction.Start
    [INSTRUCTION_OPEN "<?"] => XInstruction.1

<XInstruction>: "<?"@ NAME : name { XAttribute : attributes } "?>" as Instruction
STATE XInstruction.1
    [NAME] => XInstruction.2
        ASSIGN name

<XInstruction>: "<?" NAME : name@ { XAttribute : attributes } "?>" as Instruction
<XInstruction>: "<?" NAME : name @{ XAttribute : attributes } "?>" as Instruction
STATE XInstruction.2
    [INSTRUCTION_CLOSE "?>"] => XInstruction.3
    <XAttribute> => XInstruction.2
        ASSIGN attributes

<XInstruction>: "<?" NAME : name { XAttribute : attributes } "?>" as Instruction@
STATE XInstruction.3
    EPSILON => XInstruction.5
        CREATE Instruction

<XInstruction>: "<?" NAME : name { XAttribute : attributes } "?>" as Instruction@
END STATE XInstruction.5
    TOKEN-FINISH => XInstruction.RootEnd

$<XInstruction> @
STATE XInstruction.RootEnd

--------------------------------
@ $<XDocument>
STATE XDocument.RootStart
    TOKEN-BEGIN => XDocument.Start

@ <XDocument>
STATE XDocument.Start
    <XElement> => XDocument.1
        ASSIGN rootElement
    <XInstruction> => XDocument.2
        ASSIGN prologs
    <XComment> => XDocument.2
        ASSIGN prologs

<XDocument>: { XInstruction : prologs | XComment : prologs } XElement : rootElement as Document@
STATE XDocument.1
    EPSILON => XDocument.3
        CREATE Document

<XDocument>: @{ XInstruction : prologs | XComment : prologs } XElement : rootElement as Document
STATE XDocument.2
    <XComment> => XDocument.2
        ASSIGN prologs
    <XElement> => XDocument.1
        ASSIGN rootElement
    <XInstruction> => XDocument.2
        ASSIGN prologs

<XDocument>: { XInstruction : prologs | XComment : prologs } XElement : rootElement as Document@
END STATE XDocument.3
    TOKEN-FINISH => XDocument.RootEnd

$<XDocument> @
STATE XDocument.RootEnd

--------------------------------
